{"version":3,"sources":["topLeft.png","topRight.png","logo.png","assets/devices.png","reducers/rootReducer.js","reducers/userReducer.js","reducers/uiReducer.js","config.js","actions/userAction.js","components/Home.js","components/CreateGroup.js","actions/uiActions.js","components/Player.js","components/Group.js","router/AppRouter.js","App.js","serviceWorker.js","index.js","store.js"],"names":["module","exports","combineReducers","userReducer","state","action","type","token","payload","username","group","isOwner","ownerToken","uiReducer","isLoaded","clientId","authEndpoint","redirectUri","scopes","addToken","Token","dispatch","setUsername","Username","setGroup","Group","setIsOwner","val","setOwnerToken","Home","e","hashParams","r","q","window","location","hash","substring","exec","decodeURIComponent","access_token","this","props","$","ajax","url","beforeSend","xhr","setRequestHeader","success","data","display_name","console","log","history","push","className","src","logo","alt","href","join","getUsername","onClick","createGroup","bind","joinGroup","Component","connect","bindActionCreators","CreateGroup","intervalIsSet","getDataFromDb","fetch","then","json","res","setState","handleGroup","map","groupName","includes","confirmAlert","title","message","buttons","label","find","x","JSON","stringify","ownerName","contentType","error","handleInput","event","target","value","interval","setInterval","clearInterval","placeholder","onChange","hasLoaded","Player","backgroundStyles","backgroundImage","item","album","images","uri","style","device","name","artists","duration_ms","userUri","ownerPlaying","sync","position","length","curGroup","element","getCurrentlyPlaying","onbeforeunload","onUnload","getURI","SyncSongs","newSong","progress_ms","topLeft","topRight","styles","loaderColor","sliderColor","autoPlay","play","showSaveIcon","AppRouter","basename","process","path","component","exact","App","Boolean","hostname","match","ReactDOM","render","store","createStore","rootReducer","applyMiddleware","thunk","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.c30a5c15.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/topLeft.7b0b5f12.png\";","module.exports = __webpack_public_path__ + \"static/media/topRight.81a215e0.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.f4b3fff4.png\";","module.exports = __webpack_public_path__ + \"static/media/devices.a3bb48b9.png\";","import { combineReducers } from 'redux';\r\nimport userReducer from './userReducer';\r\nimport uiReducer from './uiReducer';\r\n\r\nexport default combineReducers({\r\n  userReducer,\r\n  uiReducer\r\n});","export default (state = {}, action) =>{\r\n\r\n    switch(action.type){\r\n\r\n        case 'ADD_TOKEN':\r\n            return{\r\n                ...state,\r\n                token: action.payload\r\n            }\r\n        case 'SET_USERNAME':\r\n            return{\r\n                ...state,\r\n                username: action.payload\r\n            }\r\n        case 'SET_GROUP':\r\n            return{\r\n                ...state,\r\n                group: action.payload\r\n            }\r\n        case 'SET_ISOWNER':\r\n            return{\r\n                ...state,\r\n                isOwner: action.payload\r\n            } \r\n        case 'SET_OWNERTOKEN':\r\n            return{\r\n                ...state,\r\n                ownerToken: action.payload\r\n            }       \r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n}","export default (state = {isLoaded: false}, action) =>{\r\n\r\n    switch(action.type){\r\n\r\n        case 'SET_LOADED':\r\n            return{\r\n                ...state,\r\n                isLoaded: action.payload\r\n            }     \r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n}","export const clientId = \"56666d131c0b4eec8da574b72b0827c1\";\r\nexport const authEndpoint = 'https://accounts.spotify.com/authorize';\r\nexport const redirectUri = \"https://jkl1999.github.io/ListenTogether\";\r\nexport const scopes = [\r\n  \"streaming\",\r\n  \"user-read-email\",\r\n  \"user-read-private\",\r\n  \"user-library-read\",\r\n  \"user-library-modify\",\r\n  \"user-read-playback-state\",\r\n  \"user-modify-playback-state\",\r\n  \"app-remote-control\",\r\n  \"user-modify-playback-state\",\r\n  \"user-read-currently-playing\",\r\n  \"user-read-playback-state\"\r\n];","\r\nexport const addToken = (Token) => dispatch =>{\r\n    dispatch({\r\n        type: 'ADD_TOKEN',\r\n        payload: Token\r\n    })\r\n}\r\n\r\nexport const setUsername = (Username) => dispatch =>{\r\n    dispatch({\r\n        type: 'SET_USERNAME',\r\n        payload: Username\r\n    })\r\n}\r\n\r\nexport const setGroup = (Group) => dispatch =>{\r\n    dispatch({\r\n        type: 'SET_GROUP',\r\n        payload: Group\r\n    })\r\n}\r\n\r\nexport const setIsOwner = (val) => dispatch =>{\r\n    dispatch({\r\n        type: 'SET_ISOWNER',\r\n        payload: val\r\n    })\r\n}\r\n\r\nexport const setOwnerToken = (val) => dispatch =>{\r\n    dispatch({\r\n        type: 'SET_OWNERTOKEN',\r\n        payload: val\r\n    })\r\n}","import React, { Component } from \"react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from 'react-redux';\r\nimport { authEndpoint, clientId, redirectUri, scopes } from \"../config\";\r\nimport { addToken, setUsername, setIsOwner } from \"../actions/userAction\"\r\nimport '../styles/Home.css';\r\nimport logo from '../logo.png'\r\nimport $ from \"jquery\";\r\n  \r\n  \r\nclass Home extends Component {\r\n\r\n  componentDidMount() {\r\n    let hashParams = {};\r\n    let e,\r\n      r = /([^&;=]+)=?([^&;]*)/g,\r\n      q = window.location.hash.substring(1);\r\n    while ((e = r.exec(q))) {\r\n      hashParams[e[1]] = decodeURIComponent(e[2]);\r\n    }\r\n\r\n    if (hashParams.access_token) {\r\n      this.props.addToken(hashParams.access_token);\r\n    } \r\n  }\r\n  \r\n  getUsername(){\r\n   $.ajax({\r\n      url: \"https://api.spotify.com/v1/me/\",\r\n      type: \"GET\",\r\n      beforeSend: xhr => {\r\n        xhr.setRequestHeader(\"Authorization\", \"Bearer \" + this.props.token);\r\n      },\r\n      success: data => {\r\n          this.props.setUsername(data.display_name);\r\n          console.log(data.display_name)\r\n      },\r\n    });\r\n  }\r\n\r\n  createGroup(){\r\n    this.props.setIsOwner(true);\r\n    this.props.history.push('/start');\r\n  }\r\n\r\n  joinGroup(){\r\n    this.props.setIsOwner(false);\r\n    this.props.history.push('/start');\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Home\">\r\n        <header className=\"Home-header\">\r\n        <img src={logo} className=\"Home-logo\" alt=\"logo\"/>\r\n          {!this.props.token && (\r\n            <a\r\n              className=\"Home-btn\"\r\n              href={`${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\r\n                \"%20\"\r\n              )}&response_type=token&show_dialog=true`}\r\n            >\r\n              Login to Spotify\r\n            </a>\r\n          )}\r\n          {this.props.token && (\r\n            <div className=\"Home-btnDiv\">\r\n                {this.getUsername()}\r\n                <p className=\"Home-text\">Create a new group that friends can join.</p>\r\n                <button className=\"Home-createBtn\" onClick={this.createGroup.bind(this)}>Create a Group</button>\r\n                <p className=\"Home-text\">Join a group that already exists.</p>\r\n                <button className=\"Home-joinBtn\" onClick={this.joinGroup.bind(this)}>Join a Group</button>\r\n                \r\n            </div>\r\n          )}\r\n          <p className=\"Home-p\">\r\n            Created By Kyle Litton. <a className=\"Home-credit\" href='https://github.com/jkl1999/ListenTogether'>View Source</a>\r\n          </p>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    {\r\n      addToken,\r\n      setUsername,\r\n      setIsOwner\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      token: state.userReducer.token,\r\n      username: state.userReducer.username\r\n    };\r\n  };\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from \"redux\";\r\nimport { setGroup, setOwnerToken } from \"../actions/userAction\";\r\nimport '../styles/CreateGroup.css';\r\nimport logo from '../logo.png'\r\nimport $ from \"jquery\";\r\nimport { confirmAlert } from 'react-confirm-alert'; \r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\n\r\nclass CreateGroup extends Component{\r\n\r\n    state = {\r\n      data: [],\r\n      intervalIsSet:false\r\n    }\r\n\r\n    componentDidMount() {    \r\n        this.getDataFromDb();\r\n        if (!this.state.intervalIsSet) {\r\n          let interval = setInterval(this.getDataFromDb, 1000);\r\n          this.setState({ intervalIsSet: interval });\r\n        }\r\n    \r\n      }\r\n    \r\n    componentWillUnmount() {\r\n        if (this.state.intervalIsSet) {\r\n          clearInterval(this.state.intervalIsSet);\r\n          this.setState({ intervalIsSet: null });\r\n        }\r\n      }\r\n    \r\n      getDataFromDb = () => {\r\n        fetch('https://listen-together-api.herokuapp.com/Groups/getData')\r\n          .then((data) => data.json())\r\n          .then((res) => this.setState({ data: res }))\r\n          .then(console.log(this.state.data));\r\n      };\r\n\r\n      handleGroup = () => {\r\n        let groupList = this.state.data.map((data) => data.groupName);\r\n        if(groupList.includes(this.props.group))\r\n        {\r\n          if(this.props.isOwner){\r\n            confirmAlert({\r\n              title: 'Group Already Exists',\r\n              message: 'Enter a name that is not already taken.',\r\n              buttons: [{label: 'OK'}]\r\n            });\r\n          }else{\r\n            this.props.setOwnerToken(this.state.data.find(x => x.groupName===this.props.group).ownerToken);\r\n            this.props.history.push('/group');\r\n          }\r\n          \r\n        }\r\n        else{\r\n        if(this.props.isOwner){\r\n\r\n          $.ajax({\r\n            url: \"https://listen-together-api.herokuapp.com/Groups/putData\",\r\n            type: \"POST\",\r\n            data: JSON.stringify({\r\n              groupName: this.props.group,\r\n              ownerName: this.props.username,\r\n              ownerToken: this.props.token \r\n            }),\r\n            contentType: 'application/json; charset=UTF-8',\r\n            success: () => {\r\n              console.log(\"New Group Made: \" + this.props.group);\r\n              this.props.setOwnerToken(this.props.token);\r\n              this.props.history.push('/group');\r\n            },\r\n            error: () => {\r\n              confirmAlert({\r\n                title: `Error Creating Group ${this.props.group}`,\r\n                message: 'Try Again',\r\n                buttons: [{label: 'OK'}]\r\n              })\r\n            }\r\n          });\r\n\r\n            \r\n          }\r\n          else{\r\n            confirmAlert({\r\n              title: 'Group Does Not Exist',\r\n              message: 'Make sure you spelled the name of the group correctly.',\r\n              buttons: [{label: 'OK'}]\r\n            });\r\n          }\r\n        }\r\n          \r\n      }\r\n\r\n      handleInput = (event) => {\r\n        this.props.setGroup(event.target.value);\r\n      }\r\n\r\n      render() {\r\n        return (\r\n          <div className=\"Create\">\r\n            <header className=\"Create-header\">\r\n            <img src={logo} className=\"Create-logo\" alt=\"logo\"/>\r\n            \r\n            <p className=\"Create-p\">{this.props.isOwner ? 'Create Group Name' : 'Enter Group Name'}</p>\r\n\r\n            <form className=\"Create-form\">\r\n                <input className='input'\r\n                  type='text'\r\n                  placeholder='Enter Name Here'\r\n                  onChange={this.handleInput}\r\n                />\r\n             </form>\r\n             <br></br>\r\n             <button className=\"Create-startBtn\" onClick={this.handleGroup.bind(this)}>{this.props.isOwner ? 'Start Group' : 'Join Group'}</button>\r\n\r\n             <p className=\"Home-p\">\r\n            Created By Kyle Litton. <a className=\"Home-credit\" href='https://github.com/jkl1999/ListenTogether'>View Source</a>\r\n            </p>\r\n            </header>\r\n            \r\n          </div>\r\n        );\r\n      }\r\n\r\n\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    {\r\n      setGroup,\r\n      setOwnerToken\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      group: state.userReducer.group,\r\n      token: state.userReducer.token,\r\n      username: state.userReducer.username,\r\n      isOwner: state.userReducer.isOwner,\r\n      ownerToken: state.userReducer.ownerToken\r\n    };\r\n  };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateGroup);","export const hasLoaded = (val) => dispatch =>{\r\n    dispatch({\r\n        type: 'SET_LOADED',\r\n        payload: val\r\n    })\r\n}","import React from \"react\";\r\nimport \"../styles/Player.css\";\r\nimport device from '../assets/devices.png';\r\n\r\nconst Player = props => {\r\n  const backgroundStyles = {\r\n    backgroundImage:`url(${\r\n      props.item.album.images[0].url\r\n    })`,\r\n  };\r\n\r\n  if(props.uri!==\"\"){\r\n    return (\r\n      <div className=\"App\">  \r\n        <div className=\"main-wrapper\">\r\n          <div className=\"now-playing__img\">   \r\n            <img src={props.item.album.images[0].url} alt=\"\"/>\r\n          </div>\r\n          <div className=\"background\" style={backgroundStyles} />{\" \"}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  else{\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"main-wrapper\">\r\n          <p className=\"instructions\">Press    <img src={device} className=\"device\" alt=\"device\"/>  , Then select \"Listen Together\" to play music.</p>\r\n          <div className=\"background\" style={backgroundStyles} />{\" \"}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n  \r\n\r\n\r\nexport default Player;","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from \"redux\";\r\nimport { authEndpoint, clientId, redirectUri, scopes } from \"../config\";\r\nimport { hasLoaded } from \"../actions/uiActions\";\r\nimport '../styles/Group.css';\r\nimport topLeft from '../topLeft.png';\r\nimport topRight from '../topRight.png';\r\nimport Player from './Player.js';\r\nimport SpotifyPlayer from 'react-spotify-web-playback';\r\nimport $ from \"jquery\";\r\nimport { confirmAlert } from 'react-confirm-alert'; \r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\n\r\nclass Group extends Component{\r\n\r\n    state = {\r\n      data: [],\r\n      intervalIsSet:false,\r\n      ownerToken: \"\",\r\n      item: {\r\n        album: {\r\n          images: [{ url: \"\" }]\r\n        },\r\n        name: \"\",\r\n        artists: [{ name: \"\" }],\r\n        duration_ms: 0\r\n      },\r\n      userUri: [],\r\n      ownerPlaying: [],\r\n      uri: \"\",\r\n      sync: false,\r\n      position: 0\r\n    }\r\n\r\n    componentDidMount() { \r\n      this.getDataFromDb();   \r\n        if (!this.state.intervalIsSet) {\r\n          let interval = setInterval(this.getDataFromDb, 1000);\r\n          this.setState({ intervalIsSet: interval });\r\n        }\r\n        if(this.state.data.length>0){\r\n          let curGroup = this.state.data.find(element => element.group === this.props.group);\r\n          this.setState({ownerToken:curGroup.ownerToken});\r\n          this.getCurrentlyPlaying(this.state.ownerToken);\r\n        }\r\n        window.onbeforeunload = function() {\r\n          this.onUnload();\r\n          return \"\";\r\n        }.bind(this);\r\n        this.props.hasLoaded(true);\r\n      }\r\n    \r\n    componentWillUnmount() {\r\n        if (this.state.intervalIsSet) {\r\n          clearInterval(this.state.intervalIsSet);\r\n          this.setState({ intervalIsSet: null });\r\n        }\r\n        this.props.hasLoaded(false);\r\n      }\r\n\r\n    componentDidUpdate(){\r\n        // Keep members tracks synced\r\n        if(!this.props.isOwner && this.state.ownerPlaying.length !== 0){\r\n          console.log(\"CUR URI: \" + this.state.userUri[0]);\r\n\r\n          if(this.state.userUri.length===0){\r\n            this.getURI(this.props.token);\r\n          }        \r\n          else if(this.state.userUri[0] !== this.state.uri && this.state.sync){\r\n            this.SyncSongs(this.props.token);\r\n          }\r\n          \r\n        }\r\n    }\r\n    \r\n      getDataFromDb = () => {\r\n        fetch('https://listen-together-api.herokuapp.com/Groups/getData')\r\n          .then((data) => data.json())\r\n          .then((res) => this.setState({ data: res }));\r\n      };\r\n\r\n      displayOwner(){\r\n        let curGroup = this.state.data.find(element => element.group === this.props.group);\r\n        return curGroup.ownerName;\r\n      }\r\n\r\n      SyncSongs(token){\r\n        $.ajax({\r\n          url: \"https://api.spotify.com/v1/me/player/play\",\r\n          type: \"PUT\",\r\n          data: JSON.stringify({\"uris\":this.state.ownerPlaying, \"position_ms\":this.state.position}),\r\n          beforeSend: xhr => {\r\n            xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\r\n          },\r\n          success: () => {\r\n            this.getURI(this.props.token);\r\n            this.setState({sync:false});\r\n            console.log(\"Songs Synced\");\r\n          }\r\n        });\r\n      }\r\n\r\n      getURI(token){\r\n        $.ajax({\r\n          url: \"https://api.spotify.com/v1/me/player\",\r\n          type: \"GET\",\r\n          beforeSend: xhr => {\r\n            xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\r\n          },\r\n          success: data => {\r\n            if(typeof data !== 'undefined'){\r\n              if(data?.item){\r\n                this.setState(\r\n                {\r\n                  userUri : [data.item.uri]\r\n                }\r\n              )\r\n              }else{\r\n                this.setState(\r\n                  {\r\n                    userUri : [\"Not Playing\"]\r\n                  }\r\n                )\r\n              }             \r\n            }\r\n          }\r\n        });\r\n      }\r\n\r\n      // TODO change to componentDidUpdate\r\n      getCurrentlyPlaying(token) {\r\n          $.ajax({\r\n            url: \"https://api.spotify.com/v1/me/player\",\r\n            type: \"GET\",\r\n            beforeSend: xhr => {\r\n              xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\r\n            },\r\n            success: data => {\r\n              if(typeof data !== 'undefined'){\r\n                \r\n                const newSong = [data.item.uri];\r\n                  if(data.item.uri !== this.state.uri){\r\n                  this.setState({\r\n                    item: data.item,\r\n                    uri : data.item.uri,\r\n                    ownerPlaying : newSong,\r\n                    sync: true,\r\n                    position: data.progress_ms\r\n                  });\r\n                }\r\n              }\r\n              else if(!this.props.isOwner){\r\n                confirmAlert({\r\n                  title: 'No Music Playing',\r\n                  message: 'The group leader needs to start playing music to begin.',\r\n                  buttons: [{label: 'OK'}]\r\n                });\r\n              }\r\n            }\r\n          });\r\n      }\r\n\r\n      render() {\r\n\r\n        if(!this.props.isLoaded){\r\n          return(\r\n          <div className=\"Group\">\r\n            <header className=\"Group-header\">\r\n            <h1 className=\"Group-title\">Listen Together</h1>\r\n                <img src={topLeft} className=\"Group-logoLeft\" alt=\"logo\"/>\r\n                <img src={topRight} className=\"Group-logoRight\" alt=\"logo\"/>\r\n            <div className=\"loader\"></div>\r\n            </header>\r\n          </div>\r\n          )\r\n        }\r\n        if(this.props.isLoaded && this.state.data.length === 0){\r\n          return(\r\n          <div className=\"Group\">\r\n            <header className=\"Group-header\">\r\n            <h1 className=\"Group-title\">Listen Together</h1>\r\n            <img src={topLeft} className=\"Group-logoLeft\" alt=\"logo\"/>\r\n            <img src={topRight} className=\"Group-logoRight\" alt=\"logo\"/>\r\n\r\n            <p className=\"Group-curGroup\">Loading...</p>\r\n            <div className=\"loader\"></div>\r\n          \r\n            <p className=\"Home-p\">\r\n            Created By Kyle Litton. <a className=\"Home-credit\" href='https://github.com/jkl1999/ListenTogether'>View Source</a>\r\n            </p>\r\n            </header>\r\n            \r\n          </div>\r\n          )\r\n        }\r\n        else{\r\n          if(this.props.isLoaded && !this.props.username){\r\n            return(\r\n              <div className=\"Group\">\r\n                <header className=\"Group-header\">\r\n                <h1 className=\"Group-title\">Listen Together</h1>\r\n                    <img src={topLeft} className=\"Group-logoLeft\" alt=\"logo\"/>\r\n                    <img src={topRight} className=\"Group-logoRight\" alt=\"logo\"/>\r\n                <h3 className=\"Group-loadError\">Something Went Wrong</h3>\r\n                <a\r\n              className=\"Group-tryAgain\"\r\n              href={`${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\r\n                \"%20\"\r\n              )}&response_type=token&show_dialog=true`}\r\n            >\r\n              Try Again\r\n            </a>\r\n                </header>\r\n              </div>\r\n              )\r\n          }\r\n          if(!this.props.isOwner){\r\n            return (\r\n              <div className=\"Group\">\r\n                <header className=\"Group-header\">\r\n                <h1 className=\"Group-title\">Listen Together</h1>\r\n                <img src={topLeft} className=\"Group-logoLeft\" alt=\"logo\"/>\r\n                <img src={topRight} className=\"Group-logoRight\" alt=\"logo\"/> \r\n                {this.getCurrentlyPlaying(this.props.ownerToken)}\r\n                <div className='Group-player'>\r\n                    {console.log(this.state.uri)}\r\n                    <Player\r\n                      item={this.state.item}\r\n                      uri={this.state.uri}\r\n                      />\r\n                      <br></br>\r\n                      <br></br>\r\n                      <SpotifyPlayer\r\n                      styles={{\r\n                        loaderColor: '#1db954',\r\n                        sliderColor: '#1db954',\r\n                      }}\r\n                      autoPlay\r\n                      play={true}\r\n                      showSaveIcon={true}\r\n                      token={this.props.token}          \r\n                      name = \"Listen Together\"\r\n                      />;\r\n                  </div>\r\n                <p className=\"Home-p\">\r\n                Created By Kyle Litton. <a className=\"Home-credit\" href='https://github.com/jkl1999/ListenTogether'>View Source</a>\r\n                </p>\r\n                </header>\r\n                \r\n              </div>\r\n            );\r\n          }\r\n          if(this.props.isOwner){\r\n            return (\r\n              <div className=\"Group\">\r\n                <header className=\"Group-header\">\r\n                <h1 className=\"Group-title\">Listen Together</h1>\r\n                <img src={topLeft} className=\"Group-logoLeft\" alt=\"logo\"/>\r\n                <img src={topRight} className=\"Group-logoRight\" alt=\"logo\"/>\r\n  \r\n                <p className=\"Group-curGroup\">{'Current Group: ' + this.props.group}</p>\r\n                {this.getCurrentlyPlaying(this.props.token)}           \r\n                  <div className='Group-player'>\r\n                    <Player\r\n                      item={this.state.item}\r\n                      uri={this.state.uri}\r\n                      />\r\n                      <br></br>\r\n                      <br></br>\r\n                      <SpotifyPlayer\r\n                      styles={{\r\n                        loaderColor: '#1db954',\r\n                        sliderColor: '#1db954',\r\n                      }}\r\n                      autoPlay\r\n                      play={true}\r\n                      showSaveIcon={true}\r\n                      token={this.props.token}          \r\n                      name = \"Listen Together\"\r\n                      />;\r\n                  </div>\r\n                <p className=\"Home-p\">\r\n                Created By Kyle Litton. <a className=\"Home-credit\" href='https://github.com/jkl1999/ListenTogether'>View Source</a>\r\n                </p>\r\n                </header>\r\n                \r\n              </div>\r\n            );\r\n          }        \r\n        }\r\n      }\r\n\r\n\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    {\r\n      hasLoaded\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      isLoaded: state.uiReducer.isLoaded,\r\n      group: state.userReducer.group,\r\n      token: state.userReducer.token,\r\n      username: state.userReducer.username,\r\n      isOwner: state.userReducer.isOwner,\r\n      ownerToken: state.userReducer.ownerToken\r\n    };\r\n  };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Group);","import React from 'react';\r\nimport { BrowserRouter, Route, Switch,} from 'react-router-dom';\r\nimport Home from '../components/Home';\r\nimport CreateGroup from '../components/CreateGroup';\r\nimport Group from '../components/Group';\r\n\r\nconst AppRouter = () => (\r\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n    <div>\r\n      <Switch>\r\n        <Route path= \"/\" component={Home} exact={true}/>\r\n        <Route path= \"/start\" component={CreateGroup} />\r\n        <Route path= '/group' component={Group} />\r\n      </Switch>\r\n    </div>\r\n  </BrowserRouter>\r\n);\r\n\r\nexport default AppRouter;","import React from 'react';\r\nimport AppRouter from './router/AppRouter';\r\nimport './styles/App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <AppRouter />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport configureStore from './store';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <Provider store={configureStore()}>\r\n    <App />\r\n </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers/rootReducer';\r\n\r\nexport default function configureStore() {\r\n return createStore(\r\n  rootReducer,\r\n  applyMiddleware(thunk)\r\n );\r\n}"],"sourceRoot":""}