{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\99kyl\\\\ListenTogether\\\\client\\\\src\\\\components\\\\CreateGroup.js\";\nimport React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from \"redux\";\nimport { setGroup, setOwnerToken } from \"../actions/userAction\";\nimport '../styles/CreateGroup.css';\nimport logo from '../logo.png';\nimport $ from \"jquery\";\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\n\nclass CreateGroup extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: [],\n      intervalIsSet: false\n    };\n\n    this.getDataFromDb = () => {\n      fetch('https://listen-together-api.herokuapp.com/Groups/getData').then(data => data.json()).then(res => this.setState({\n        data: res\n      })).then(console.log(this.state.data));\n    };\n\n    this.handleGroup = () => {\n      let groupList = this.state.data.map(data => data.groupName);\n\n      if (groupList.includes(this.props.group)) {\n        if (this.props.isOwner) {\n          confirmAlert({\n            title: 'Group Already Exists',\n            message: 'Enter a name that is not already taken.',\n            buttons: [{\n              label: 'OK'\n            }]\n          });\n        } else {\n          this.props.setOwnerToken(this.state.data.find(x => x.groupName === this.props.group).ownerToken);\n          this.props.history.push('/group');\n        }\n      } else {\n        if (this.props.isOwner) {\n          $.ajax({\n            url: \"https://listen-together-api.herokuapp.com/Groups/putData\",\n            type: \"POST\",\n            data: JSON.stringify({\n              groupName: this.props.group,\n              ownerName: this.props.username,\n              ownerToken: this.props.token\n            }),\n            contentType: 'application/json; charset=UTF-8',\n            success: () => {\n              console.log(\"New Group Made: \" + this.props.group);\n              this.props.setOwnerToken(this.props.token);\n              this.props.history.push('/group');\n            },\n            error: () => {\n              confirmAlert({\n                title: `Error Creating Group ${this.props.group}`,\n                message: 'Try Again',\n                buttons: [{\n                  label: 'OK'\n                }]\n              });\n            }\n          });\n        } else {\n          confirmAlert({\n            title: 'Group Does Not Exist',\n            message: 'Make sure you spelled the name of the group correctly.',\n            buttons: [{\n              label: 'OK'\n            }]\n          });\n        }\n      }\n    };\n\n    this.handleInput = event => {\n      this.props.setGroup(event.target.value);\n    };\n  }\n\n  componentDidMount() {\n    this.getDataFromDb();\n\n    if (!this.state.intervalIsSet) {\n      let interval = setInterval(this.getDataFromDb, 1000);\n      this.setState({\n        intervalIsSet: interval\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({\n        intervalIsSet: null\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Create\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"Create-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: logo,\n      className: \"Create-logo\",\n      alt: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"Create-p\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, this.props.isOwner ? 'Create Group Name' : 'Enter Group Name'), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"Create-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"input\",\n      type: \"text\",\n      placeholder: \"Enter Name Here\",\n      onChange: this.handleInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 14\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"Create-startBtn\",\n      onClick: this.handleGroup.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 14\n      }\n    }, this.props.isOwner ? 'Start Group' : 'Join Group'), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"Home-p\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 14\n      }\n    }, \"Created By Kyle Litton. \", /*#__PURE__*/React.createElement(\"a\", {\n      className: \"Home-credit\",\n      href: \"https://github.com/jkl1999/ListenTogether\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 37\n      }\n    }, \"View Source\"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    setGroup,\n    setOwnerToken\n  }, dispatch);\n};\n\nconst mapStateToProps = state => {\n  return {\n    group: state.userReducer.group,\n    token: state.userReducer.token,\n    username: state.userReducer.username,\n    isOwner: state.userReducer.isOwner,\n    ownerToken: state.userReducer.ownerToken\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateGroup);","map":{"version":3,"sources":["C:/Users/99kyl/ListenTogether/client/src/components/CreateGroup.js"],"names":["React","Component","connect","bindActionCreators","setGroup","setOwnerToken","logo","$","confirmAlert","CreateGroup","state","data","intervalIsSet","getDataFromDb","fetch","then","json","res","setState","console","log","handleGroup","groupList","map","groupName","includes","props","group","isOwner","title","message","buttons","label","find","x","ownerToken","history","push","ajax","url","type","JSON","stringify","ownerName","username","token","contentType","success","error","handleInput","event","target","value","componentDidMount","interval","setInterval","componentWillUnmount","clearInterval","render","bind","mapDispatchToProps","dispatch","mapStateToProps","userReducer"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from \"redux\";\r\nimport { setGroup, setOwnerToken } from \"../actions/userAction\";\r\nimport '../styles/CreateGroup.css';\r\nimport logo from '../logo.png'\r\nimport $ from \"jquery\";\r\nimport { confirmAlert } from 'react-confirm-alert'; \r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\n\r\nclass CreateGroup extends Component{\r\n\r\n    state = {\r\n      data: [],\r\n      intervalIsSet:false\r\n    }\r\n\r\n    componentDidMount() {    \r\n        this.getDataFromDb();\r\n        if (!this.state.intervalIsSet) {\r\n          let interval = setInterval(this.getDataFromDb, 1000);\r\n          this.setState({ intervalIsSet: interval });\r\n        }\r\n    \r\n      }\r\n    \r\n    componentWillUnmount() {\r\n        if (this.state.intervalIsSet) {\r\n          clearInterval(this.state.intervalIsSet);\r\n          this.setState({ intervalIsSet: null });\r\n        }\r\n      }\r\n    \r\n      getDataFromDb = () => {\r\n        fetch('https://listen-together-api.herokuapp.com/Groups/getData')\r\n          .then((data) => data.json())\r\n          .then((res) => this.setState({ data: res }))\r\n          .then(console.log(this.state.data));\r\n      };\r\n\r\n      handleGroup = () => {\r\n        let groupList = this.state.data.map((data) => data.groupName);\r\n        if(groupList.includes(this.props.group))\r\n        {\r\n          if(this.props.isOwner){\r\n            confirmAlert({\r\n              title: 'Group Already Exists',\r\n              message: 'Enter a name that is not already taken.',\r\n              buttons: [{label: 'OK'}]\r\n            });\r\n          }else{\r\n            this.props.setOwnerToken(this.state.data.find(x => x.groupName===this.props.group).ownerToken);\r\n            this.props.history.push('/group');\r\n          }\r\n          \r\n        }\r\n        else{\r\n        if(this.props.isOwner){\r\n\r\n          $.ajax({\r\n            url: \"https://listen-together-api.herokuapp.com/Groups/putData\",\r\n            type: \"POST\",\r\n            data: JSON.stringify({\r\n              groupName: this.props.group,\r\n              ownerName: this.props.username,\r\n              ownerToken: this.props.token \r\n            }),\r\n            contentType: 'application/json; charset=UTF-8',\r\n            success: () => {\r\n              console.log(\"New Group Made: \" + this.props.group);\r\n              this.props.setOwnerToken(this.props.token);\r\n              this.props.history.push('/group');\r\n            },\r\n            error: () => {\r\n              confirmAlert({\r\n                title: `Error Creating Group ${this.props.group}`,\r\n                message: 'Try Again',\r\n                buttons: [{label: 'OK'}]\r\n              })\r\n            }\r\n          });\r\n\r\n            \r\n          }\r\n          else{\r\n            confirmAlert({\r\n              title: 'Group Does Not Exist',\r\n              message: 'Make sure you spelled the name of the group correctly.',\r\n              buttons: [{label: 'OK'}]\r\n            });\r\n          }\r\n        }\r\n          \r\n      }\r\n\r\n      handleInput = (event) => {\r\n        this.props.setGroup(event.target.value);\r\n      }\r\n\r\n      render() {\r\n        return (\r\n          <div className=\"Create\">\r\n            <header className=\"Create-header\">\r\n            <img src={logo} className=\"Create-logo\" alt=\"logo\"/>\r\n            \r\n            <p className=\"Create-p\">{this.props.isOwner ? 'Create Group Name' : 'Enter Group Name'}</p>\r\n\r\n            <form className=\"Create-form\">\r\n                <input className='input'\r\n                  type='text'\r\n                  placeholder='Enter Name Here'\r\n                  onChange={this.handleInput}\r\n                />\r\n             </form>\r\n             <br></br>\r\n             <button className=\"Create-startBtn\" onClick={this.handleGroup.bind(this)}>{this.props.isOwner ? 'Start Group' : 'Join Group'}</button>\r\n\r\n             <p className=\"Home-p\">\r\n            Created By Kyle Litton. <a className=\"Home-credit\" href='https://github.com/jkl1999/ListenTogether'>View Source</a>\r\n            </p>\r\n            </header>\r\n            \r\n          </div>\r\n        );\r\n      }\r\n\r\n\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    {\r\n      setGroup,\r\n      setOwnerToken\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      group: state.userReducer.group,\r\n      token: state.userReducer.token,\r\n      username: state.userReducer.username,\r\n      isOwner: state.userReducer.isOwner,\r\n      ownerToken: state.userReducer.ownerToken\r\n    };\r\n  };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateGroup);"]},"metadata":{},"sourceType":"module"}