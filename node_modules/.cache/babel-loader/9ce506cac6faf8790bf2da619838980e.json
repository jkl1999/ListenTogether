{"ast":null,"code":"var _jsxFileName = \"/Users/kylelitton/Code/listen-together/client/src/components/CreateGroup.js\";\nimport React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport { setGroup, setIsOwner } from \"../actions/userAction\";\n\nconst mapDispatchToProps = dispatch => ({\n  setGroup: group => dispatch(addToken(group)),\n  setIsOwner: val => dispatch(setIsOwner(val))\n});\n\nconst mapStateToProps = state => {\n  return { ...state\n  };\n};\n\nclass CreateGroup extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getDataFromDb = () => {\n      fetch('http://localhost:3001/api/getData').then(data => data.json()).then(res => this.setState({\n        data: res.data\n      }));\n    };\n  }\n\n  componentDidMount() {\n    // Set token\n    let _token = hash.access_token;\n    console.log(_token);\n\n    if (_token) {\n      // Set token\n      this.setState({\n        token: _token\n      });\n    }\n\n    this.getDataFromDb();\n\n    if (!this.state.intervalIsSet) {\n      let interval = setInterval(this.getDataFromDb, 1000);\n      this.setState({\n        intervalIsSet: interval\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({\n        intervalIsSet: null\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateGroup);","map":{"version":3,"sources":["/Users/kylelitton/Code/listen-together/client/src/components/CreateGroup.js"],"names":["React","Component","connect","setGroup","setIsOwner","mapDispatchToProps","dispatch","group","addToken","val","mapStateToProps","state","CreateGroup","getDataFromDb","fetch","then","data","json","res","setState","componentDidMount","_token","hash","access_token","console","log","token","intervalIsSet","interval","setInterval","componentWillUnmount","clearInterval","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAoC,uBAApC;;AAEA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACpCH,EAAAA,QAAQ,EAAGI,KAAD,IAAWD,QAAQ,CAACE,QAAQ,CAACD,KAAD,CAAT,CADO;AAEpCH,EAAAA,UAAU,EAAGK,GAAD,IAASH,QAAQ,CAACF,UAAU,CAACK,GAAD,CAAX;AAFO,CAAL,CAAnC;;AAKA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO,EACL,GAAGA;AADE,GAAP;AAGD,CAJH;;AAMA,MAAMC,WAAN,SAA0BX,SAA1B,CAAmC;AAAA;AAAA;;AAAA,SA0B7BY,aA1B6B,GA0Bb,MAAM;AACpBC,MAAAA,KAAK,CAAC,mCAAD,CAAL,CACGC,IADH,CACSC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADlB,EAEGF,IAFH,CAESG,GAAD,IAAS,KAAKC,QAAL,CAAc;AAAEH,QAAAA,IAAI,EAAEE,GAAG,CAACF;AAAZ,OAAd,CAFjB;AAGD,KA9B4B;AAAA;;AAE/BI,EAAAA,iBAAiB,GAAG;AAChB;AACA,QAAIC,MAAM,GAAGC,IAAI,CAACC,YAAlB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;;AACA,QAAIA,MAAJ,EAAY;AACV;AACA,WAAKF,QAAL,CAAc;AAACO,QAAAA,KAAK,EAAEL;AAAR,OAAd;AACD;;AAED,SAAKR,aAAL;;AACA,QAAI,CAAC,KAAKF,KAAL,CAAWgB,aAAhB,EAA+B;AAC7B,UAAIC,QAAQ,GAAGC,WAAW,CAAC,KAAKhB,aAAN,EAAqB,IAArB,CAA1B;AACA,WAAKM,QAAL,CAAc;AAAEQ,QAAAA,aAAa,EAAEC;AAAjB,OAAd;AACD;AAEF;;AAEHE,EAAAA,oBAAoB,GAAG;AACnB,QAAI,KAAKnB,KAAL,CAAWgB,aAAf,EAA8B;AAC5BI,MAAAA,aAAa,CAAC,KAAKpB,KAAL,CAAWgB,aAAZ,CAAb;AACA,WAAKR,QAAL,CAAc;AAAEQ,QAAAA,aAAa,EAAE;AAAjB,OAAd;AACD;AACF;;AAQDK,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAOD;;AAxC4B;;AA8CnC,eAAe9B,OAAO,CAACQ,eAAD,EAAkBL,kBAAlB,CAAP,CAA6CO,WAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport { setGroup, setIsOwner} from \"../actions/userAction\"\n\nconst mapDispatchToProps = dispatch => ({\n    setGroup: (group) => dispatch(addToken(group)),\n    setIsOwner: (val) => dispatch(setIsOwner(val))\n})\n\nconst mapStateToProps = state => {\n    return {\n      ...state\n    };\n  };\n\nclass CreateGroup extends Component{\n\n    componentDidMount() {\n        // Set token\n        let _token = hash.access_token;\n        console.log(_token)\n        if (_token) {\n          // Set token\n          this.setState({token: _token});\n        }\n    \n        this.getDataFromDb();\n        if (!this.state.intervalIsSet) {\n          let interval = setInterval(this.getDataFromDb, 1000);\n          this.setState({ intervalIsSet: interval });\n        }\n    \n      }\n    \n    componentWillUnmount() {\n        if (this.state.intervalIsSet) {\n          clearInterval(this.state.intervalIsSet);\n          this.setState({ intervalIsSet: null });\n        }\n      }\n    \n      getDataFromDb = () => {\n        fetch('http://localhost:3001/api/getData')\n          .then((data) => data.json())\n          .then((res) => this.setState({ data: res.data }));\n      };\n\n      render() {\n        return (\n          <div className=\"App\">\n            <header className=\"App-header\">\n              \n            </header>\n          </div>\n        );\n      }\n\n\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateGroup);"]},"metadata":{},"sourceType":"module"}